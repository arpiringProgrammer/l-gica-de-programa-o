#include <stdio.h>
#include <string.h>

#define NUM_PRODUCTS 10
#define NUM_WAREHOUSES 5

/*
This program does the following:
a) Receives 10 product names and stores them in an array (each name is unique);
b) Stores the stock of each of these products in 5 warehouses, in a 5x10 matrix;
c) Stores the price of each product in an array.
*/

// Function to receive product information
void inputProductInfo(char names[NUM_PRODUCTS][50], int stock[NUM_WAREHOUSES][NUM_PRODUCTS], float prices[NUM_PRODUCTS], int *productCount) {
    char productName[50];
    int productIndex, warehouseIndex, isDuplicate;

    for (productIndex = 0; productIndex < NUM_PRODUCTS; productIndex++) {
        printf("Enter the name of product %d: ", productIndex + 1);
        setbuf(stdin, NULL);
        fgets(productName, 50, stdin);
        productName[strcspn(productName, "\n")] = 0;  // Remove newline character
        
        // Check for duplicate product name
        isDuplicate = 0;
        for (int i = 0; i < *productCount; i++) {
            if (strcmp(names[i], productName) == 0) {
                printf("This product name already exists! Please enter a different name.\n");
                productIndex--;  // Retry current product
                isDuplicate = 1;
                break;
            }
        }
        
        // If the name is unique, store the product information
        if (!isDuplicate) {
            strcpy(names[productIndex], productName);

            // Get the product price
            printf("Enter the price of %s: ", names[productIndex]);
            scanf("%f", &prices[productIndex]);

            // Get the stock for each warehouse
            printf("Enter stock quantities for %s in %d warehouses:\n", names[productIndex], NUM_WAREHOUSES);
            for (warehouseIndex = 0; warehouseIndex < NUM_WAREHOUSES; warehouseIndex++) {
                printf("Stock in Warehouse %d: ", warehouseIndex + 1);
                scanf("%d", &stock[warehouseIndex][productIndex]);
            }

            // Update the number of products added
            (*productCount)++;
        }
    }
}

// Function to print the stored information
void printProductInfo(char names[NUM_PRODUCTS][50], int stock[NUM_WAREHOUSES][NUM_PRODUCTS], float prices[NUM_PRODUCTS], int productCount) {
    for (int i = 0; i < productCount; i++) {
        printf("\nProduct: %s\n", names[i]);
        printf("Price: $%.2f\n", prices[i]);
        printf("Stock per warehouse:\n");
        
        for (int j = 0; j < NUM_WAREHOUSES; j++) {
            printf("  Warehouse %d: %d units\n", j + 1, stock[j][i]);
        }
    }
}

int main() {
    char productNames[NUM_PRODUCTS][50];
    int stockQuantities[NUM_WAREHOUSES][NUM_PRODUCTS] = {0};
    float productPrices[NUM_PRODUCTS];
    int productCount = 0;

    // Input the product details
    inputProductInfo(productNames, stockQuantities, productPrices, &productCount);

    // Print the product details
    printProductInfo(productNames, stockQuantities, productPrices, productCount);

    return 0;
}
